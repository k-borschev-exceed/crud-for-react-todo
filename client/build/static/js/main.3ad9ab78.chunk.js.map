{"version":3,"sources":["components/Input/index.js","components/Input/Input.js","components/TaskElement/TaskElement.js","components/List/index.js","components/List/List.js","components/Footer/index.js","components/Footer/Footer.js","components/Login/index.js","components/Login/Login.js","components/Signup/index.js","components/Signup/Signup.js","App.js","reportWebVitals.js","index.js"],"names":["Input","addTask","completeAll","isNotEmpty","isAllCompleted","useState","task","setTask","id","onClick","className","onSubmit","e","preventDefault","trim","type","placeholder","value","onChange","currentTarget","TaskElement","isCompleted","deleteTask","changeCompleteness","changeTask","title","inputCondition","setInputCondition","newValue","setNewValue","submitHandler","event","console","log","key","checked","onDoubleClick","onKeyDown","onBlur","List","props","tasks","length","map","item","showCondition","Footer","clearCompleted","showActive","showAll","showCompleted","tasksCounter","logout","active","Login","email","setEmail","emailErrors","setEmailErrors","password","setPassword","passwordErrors","setPasswordErrors","loginHandler","a","fetch","method","body","JSON","stringify","headers","res","json","data","errors","localStorage","setItem","token","checkAuth","setSignup","Signup","confirmPassword","setConfirmPassword","signupHandler","setLogin","jwt","require","App","state","all","completed","isLoggedin","logOrSignUp","componentDidMount","parse","setState","status","fetchTasks","authorization","then","stateTasksCounter","removeItem","Accept","catch","err","findIndexById","i","reduce","sum","current","setComplete","tempItems","forEach","hasOwnProperty","filter","x","indexOf","this","decode","taskElemHandler","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ad9ab78.chunk.js","sourcesContent":["import Input from \"./Input\";\nexport default Input;","import React, { useState } from 'react';\nimport './Input.css';\n\nexport default function Input({\n  addTask,\n  completeAll,\n  isNotEmpty,\n  isAllCompleted,\n}) {\n  const [task, setTask] = useState('');\n\n  const inputHandler = (e) => {\n    setTask(e.currentTarget.value);\n  };\n\n  const onBtnClickHandler = (e) => {\n    e.preventDefault();\n    if (task.trim()) addTask(task);\n    setTask('');\n  };\n\n  return (\n    <div id='input'>\n      <button\n        id='completeAllBtn'\n        onClick={completeAll}\n        className={\n          isAllCompleted && isNotEmpty\n            ? 'completed '\n            : isNotEmpty\n            ? ''\n            : 'empty'\n        }\n      >\n        &nbsp;\n      </button>\n      <form onSubmit={onBtnClickHandler}>\n        <input\n          type='text'\n          placeholder={`What needs to be done`}\n          value={task}\n          onChange={inputHandler}\n        />\n      </form>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport './TaskElement.css';\nexport default function TaskElement({\n  id,\n  isCompleted,\n  deleteTask,\n  changeCompleteness,\n  changeTask,\n  title,\n}) {\n  const [inputCondition, setInputCondition] = useState(true);\n  const [newValue, setNewValue] = useState(title);\n\n  const inputHandler = (e) => setNewValue(e.currentTarget.value);\n\n  const checkboxHandler = () => changeCompleteness(id, !isCompleted);\n\n  const submitHandler = (event) => {\n    console.log(event.type === 'blur' || event.key === 'Enter')\n    if (event.type === 'blur' || event.key === 'Enter') {\n      changeTask(newValue, id);\n      setInputCondition(true);\n    }\n  };\n\n  const deleteTaskF = () => deleteTask(id);\n\n  const changeCondition = () => setInputCondition(false);\n\n  return (\n    <>\n      <li className='taskElement'>\n        {inputCondition ? (\n          <>\n            <input\n              type='checkbox'\n              className='checkbox'\n              onChange={checkboxHandler}\n              checked={isCompleted}\n            />\n            <div id='inputArea' onDoubleClick={changeCondition}>\n              <p\n                className={\n                  isCompleted ? 'completed taskvalue' : 'uncompleted taskvalue'\n                }\n              >\n                {title}\n              </p>\n              <button className={'delete'} onClick={deleteTaskF}>\n                ×\n              </button>\n            </div>\n          </>\n        ) : (\n          <>\n            <input\n              className='valueChanger'\n              value={newValue}\n              onChange={inputHandler}\n              onKeyDown={submitHandler}\n              onBlur={submitHandler}\n              type='text'\n            />\n          </>\n        )}\n      </li>\n    </>\n  );\n}\n","import List from \"./List\";\nexport default List;","import React from 'react';\nimport TaskElement from '../TaskElement/TaskElement';\nimport './List.css';\n\nexport default function List(props) {\n  const renderHandler = () => {\n    let tasksTemplate = null;\n\n    if (props.tasks.length) {\n      tasksTemplate = props.tasks.map((item) => {\n        if (\n          props.showCondition === 'all' ||\n          (props.showCondition === 'uncompleted' && !item.isCompleted) ||\n          (props.showCondition === 'completed' && item.isCompleted)\n        ) {\n          return (\n            <TaskElement\n              title={item.title}\n              key={item.id}\n              id={item.id}\n              isCompleted={item.isCompleted}\n              changeCompleteness={props.changeCompleteness}\n              deleteTask={props.deleteTask}\n              changeTask={props.changeTask}\n            />\n          );\n        }\n        return null;\n      });\n    } else {\n      tasksTemplate = <p>No tasks</p>;\n    }\n    return tasksTemplate;\n  };\n\n  return (\n    <>\n      <hr></hr>\n      <ul>{renderHandler()}</ul>\n    </>\n  );\n}\n","import Footer from \"./Footer\";\nexport default Footer;","import React from 'react';\nimport './Footer.css';\n\nexport default function Footer({\n  clearCompleted,\n  showActive,\n  showAll,\n  showCompleted,\n  tasksCounter,\n  showCondition,\n  logout,\n}) {\n  const clearCompletedF = () => clearCompleted();\n  const showActiveF = () => showActive();\n  const showAllF = () => showAll();\n  const showCompletedF = () => showCompleted();\n\n  return (\n    <div id='footer'>\n      <p className='itemsLeft'>{tasksCounter.active} items left</p>\n      <ul className='menu'>\n        <li\n          className={`menuElement ${showCondition === 'all' ? 'active' : 'n'}`}\n          onClick={showAllF}\n        >\n          All\n        </li>\n        <li\n          className={`menuElement ${\n            showCondition === 'uncompleted' ? 'active' : 'n'\n          }`}\n          onClick={showActiveF}\n        >\n          Active\n        </li>\n        <li\n          className={`menuElement ${\n            showCondition === 'completed' ? 'active' : 'n'\n          }`}\n          onClick={showCompletedF}\n        >\n          Completed\n        </li>\n      </ul>\n      <button\n        className={`footerBtn ${!tasksCounter ? 'hidden' : ''}`}\n        onClick={clearCompletedF}\n      >\n        Clear completed\n      </button>\n    </div>\n  );\n}\n","import Login from \"./Login\";\nexport default Login;","import React, { useState } from 'react';\nimport './Login.css';\n\nexport default function Login(props) {\n  const [email, setEmail] = useState('');\n  const [emailErrors, setEmailErrors] = useState('');\n\n  const [password, setPassword] = useState('');\n  const [passwordErrors, setPasswordErrors] = useState('');\n\n  const loginHandler = async (e) => {\n    e.preventDefault();\n    try {\n      const res = await fetch('/login', {\n        method: 'POST',\n        body: JSON.stringify({ email, password }),\n        headers: { 'Content-Type': 'application/json' },\n      });\n      const data = await res.json();\n      if (data.errors) {\n        setEmailErrors(data.errors.email);\n        setPasswordErrors(data.errors.password);\n      } else {\n        localStorage.setItem('auth', JSON.stringify(data.token));\n        props.checkAuth();\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className='login'>\n      <form onSubmit={loginHandler}>\n        <div className='loginMenu'>\n          <h2>{'Login'}</h2>\n        </div>\n        <label>Email</label>\n        <input\n          type='text'\n          value={email}\n          onChange={(e) => setEmail(e.currentTarget.value)}\n        />\n        <div className='email error'>{emailErrors}</div>\n        <label>Password</label>\n        <input\n          type='password'\n          value={password}\n          onChange={(e) => setPassword(e.currentTarget.value)}\n        />\n        <div className='password error'>{passwordErrors}</div>\n        <button>Login</button>\n        <p onClick={props.setSignup} className='link'>\n          Don't have an account?\n        </p>\n      </form>\n    </div>\n  );\n}\n","import Signup from \"./Signup\";\nexport default Signup;","import React, { useState } from 'react';\nimport './Signup.css';\n\nexport default function Login(props) {\n  const [email, setEmail] = useState('');\n  const [emailErrors, setEmailErrors] = useState('');\n\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const [passwordErrors, setPasswordErrors] = useState('');\n\n  const signupHandler = async (e) => {\n    e.preventDefault();\n    if (password === confirmPassword) {\n    try {\n      const res = await fetch('/signup', {\n        method: 'POST',\n        body: JSON.stringify({ email, password }),\n        headers: { 'Content-Type': 'application/json' },\n      });\n      const data = await res.json();\n      if (data.errors) {\n        setEmailErrors(data.errors.email);\n        setPasswordErrors(data.errors.password);\n      }\n      else  {\n        props.setLogin();\n      }\n    } catch (err) {\n      console.log(err);\n    }\n    }\n    else {\n      setPasswordErrors(`Passwords don't match`)\n    }\n  };\n\n  return (\n    <div className='signup'>\n      <form onSubmit={signupHandler}>\n        <div className='signupMenu'>\n          <h2>{'Signup'}</h2>\n        </div>\n        <label>Email</label>\n        <input\n          type='text'\n          value={email}\n          onChange={(e) => setEmail(e.currentTarget.value)}\n        />\n        <div className='email error'>{emailErrors}</div>\n        <label>Password</label>\n        <input\n          type='password'\n          value={password}\n          onChange={(e) => setPassword(e.currentTarget.value)}\n        />\n        <div className='password error'>{passwordErrors}</div>\n        <label>Confirm password</label>\n        <input\n          type='password'\n          value={confirmPassword}\n          onChange={(e) => setConfirmPassword(e.currentTarget.value)}\n        />\n        <button>Signup</button>\n        <p onClick={props.setLogin} className='link'>\n          Already have an account?\n        </p>\n      </form>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport Input from './components/Input';\nimport List from './components/List';\nimport Footer from './components/Footer';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nconst jwt = require('jsonwebtoken');\n//title only create\n//все кроме токена в локалсторадж\n//после сайгнапа кидать на логин\nexport default class App extends React.Component {\n  state = {\n    tasks: [],\n    showCondition: 'all',\n    tasksCounter: { all: 0, completed: 0, active: 0 },\n    isLoggedin: false,\n    logOrSignUp: 'login',\n  };\n\n  componentDidMount = async () => {\n    await this.checkAuth();\n  };\n\n  checkAuth = async () => {\n    if (localStorage['auth']) {\n      const token = JSON.parse(localStorage['auth']);\n      //const id = JSON.parse(localStorage['auth']).userId;\n\n      const res = await fetch('/verifyToken', {\n        method: 'POST',\n        body: JSON.stringify({ token }),\n        headers: { 'Content-Type': 'application/json' },\n      });\n      const data = await res.json();\n\n      this.setState({ isLoggedin: data.status });\n    } else {\n      this.setState({ isLoggedin: false });\n    }\n    if (this.state.isLoggedin) {\n      await this.fetchTasks();\n    }\n  };\n\n  fetchTasks = async () => {\n    fetch('/tasks/', {\n      method: 'GET',\n      headers: {\n        authorization: JSON.parse(localStorage['auth']),\n      },\n    })\n      .then((res) => res.json())\n      .then(async (tasks) => {\n        await this.setState({ tasks });\n        this.stateTasksCounter();\n      });\n  };\n\n  setSignup = () => this.setState({ logOrSignUp: 'signup' });\n\n  setLogin = () => this.setState({ logOrSignUp: 'login' });\n\n  logout = async () => {\n    await this.setState({ tasks: [] });\n    await localStorage.removeItem('auth');\n    await this.checkAuth();\n  };\n\n  addTask = async (title) => {\n    await fetch('/tasks/', {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        authorization: JSON.parse(localStorage['auth']),\n      },\n      method: 'POST',\n      body: JSON.stringify({\n        title,\n      }),\n    }).catch(function (err) {\n      console.log(err);\n    });\n    await this.fetchTasks();\n  };\n\n  findIndexById = (id) => {\n    for (let i = 0; i < this.state.tasks.length; i++) {\n      if (id === this.state.tasks[i].id) return i;\n    }\n  };\n\n  stateTasksCounter = () => {\n    this.setState({\n      tasksCounter: {\n        all: this.state.tasks.length,\n        completed: this.state.tasks.reduce(\n          (sum, current) => sum + current.isCompleted,\n          0\n        ),\n        active: this.state.tasks.reduce(\n          (sum, current) => sum + !current.isCompleted,\n          0\n        ),\n      },\n    });\n  };\n\n  changeCompleteness = async (id, isCompleted) => {\n    await fetch('/tasks/', {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        authorization: JSON.parse(localStorage['auth']),\n      },\n      method: 'PATCH',\n      body: JSON.stringify([{ id: id, setComplete: isCompleted }]),\n    });\n    await this.fetchTasks();\n    this.stateTasksCounter();\n  };\n\n  deleteTask = async (id) => {\n    await fetch('/tasks/', {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        authorization: JSON.parse(localStorage['auth']),\n      },\n      method: 'DELETE',\n      body: JSON.stringify([id]),\n    });\n    await this.fetchTasks();\n  };\n\n  changeTask = async (value, id) => {\n    await fetch('/tasks/', {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        authorization: JSON.parse(localStorage['auth']),\n      },\n      method: 'PATCH',\n      body: JSON.stringify([{ id: id, title: value }]),\n    });\n    await this.fetchTasks();\n  };\n\n  completeAll = async () => {\n    let tempItems = [...this.state.tasks];\n    tempItems[0].setComplete = false;\n    tempItems.forEach((item) => {\n      if (!item.isCompleted) tempItems[0].setComplete = true;\n    });\n\n    await fetch('/tasks/', {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        authorization: JSON.parse(localStorage['auth']),\n      },\n      method: 'PATCH',\n      body: JSON.stringify(\n        tempItems.map((item) => {\n          if (item.hasOwnProperty('setComplete'))\n            return { id: item.id, setComplete: item.setComplete };\n          return { id: item.id };\n        })\n      ),\n    });\n    await this.fetchTasks();\n    this.stateTasksCounter();\n  };\n\n  clearCompleted = async () => {\n    let tempItems = this.state.tasks.filter((e) => !e.isCompleted);\n\n    fetch('/tasks/', {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        authorization: JSON.parse(localStorage['auth']),\n      },\n      method: 'DELETE',\n      body: JSON.stringify(\n        this.state.tasks\n          .filter((x) => tempItems.indexOf(x) === -1)\n          .map((item) => item.id)\n      ),\n    });\n    await this.fetchTasks();\n    this.stateTasksCounter();\n  };\n\n  showActive = () => this.setState({ showCondition: 'uncompleted' });\n\n  showAll = () => this.setState({ showCondition: 'all' });\n\n  showCompleted = () => this.setState({ showCondition: 'completed' });\n\n  render() {\n    if (localStorage['auth'] && !this.state.isLoggedin) {\n      return ( <></> )\n    }\n    return (\n      <div className='App'>\n        <h1>todos</h1>\n        {this.state.isLoggedin && (\n          <>\n            <p className='username'>\n              Logged as {jwt.decode(JSON.parse(localStorage['auth'])).email}{' '}\n              <span onClick={this.logout} className='logout'>\n                {' '}\n                Logout{' '}\n              </span>\n            </p>\n            <Input\n              addTask={this.addTask}\n              completeAll={this.completeAll}\n              isAllCompleted={\n                this.state.tasksCounter.all ===\n                this.state.tasksCounter.completed\n              }\n              isNotEmpty={this.state.tasksCounter.all}\n            />\n\n            {!!this.state.tasks.length && (\n              <>\n                <List\n                  tasks={this.state.tasks}\n                  changeCompleteness={this.changeCompleteness}\n                  showCondition={this.state.showCondition}\n                  deleteTask={this.deleteTask}\n                  taskElemHandler={this.taskElemHandler}\n                  changeTask={this.changeTask}\n                />\n                <Footer\n                  clearCompleted={this.clearCompleted}\n                  showActive={this.showActive}\n                  showAll={this.showAll}\n                  showCompleted={this.showCompleted}\n                  showCondition={this.state.showCondition}\n                  tasksCounter={this.state.tasksCounter}\n                  logout={this.logout}\n                />\n              </>\n            )}\n          </>\n        )}\n        {!this.state.isLoggedin && this.state.logOrSignUp === 'login' && (\n          <Login checkAuth={this.checkAuth} setSignup={this.setSignup} />\n        )}\n        {!this.state.isLoggedin && this.state.logOrSignUp === 'signup' && (\n          <Signup checkAuth={this.checkAuth} setLogin={this.setLogin} />\n        )}\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}