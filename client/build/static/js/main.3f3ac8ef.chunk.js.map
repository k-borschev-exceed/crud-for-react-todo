{"version":3,"sources":["components/Input/index.js","components/Input/Input.js","components/TaskElement/TaskElement.js","components/List/index.js","components/List/List.js","components/Footer/index.js","components/Footer/Footer.js","components/Login/index.js","components/Login/Login.js","components/Signup/index.js","components/Signup/Signup.js","App.js","reportWebVitals.js","reducers/tasksCounter.js","reducers/tasks.js","reducers/logOrSignUp.js","reducers/index.js","reducers/visibility.js","reducers/isLoggedIn.js","store/configureStore.js","index.js"],"names":["Input","addTask","completeAll","isNotEmpty","isAllCompleted","useState","task","setTask","id","onClick","className","onSubmit","e","preventDefault","trim","type","placeholder","value","onChange","currentTarget","TaskElement","isCompleted","deleteTask","changeCompleteness","changeTask","title","inputCondition","setInputCondition","newValue","setNewValue","submitHandler","event","console","log","key","checked","onDoubleClick","onKeyDown","onBlur","List","props","tasks","length","map","item","showCondition","Footer","clearCompleted","showActive","showAll","showCompleted","tasksCounter","logout","active","Login","email","setEmail","emailErrors","setEmailErrors","password","setPassword","passwordErrors","setPasswordErrors","loginHandler","a","fetch","method","body","JSON","stringify","headers","res","json","data","errors","localStorage","setItem","token","checkAuth","setSignup","Signup","confirmPassword","setConfirmPassword","signupHandler","setLogin","jwt","require","App","componentDidMount","parse","setLoginCondition","status","isLoggedIn","fetchTasks","authorization","then","updateTasks","stateTasksCounter","setLogOrSignUp","clearTasks","removeItem","Accept","catch","err","findIndexById","i","updateCounter","all","completed","reduce","sum","current","setComplete","tempItems","forEach","hasOwnProperty","filter","x","indexOf","this","decode","visibility","taskElemHandler","logOrSignUp","React","Component","connect","store","dispatch","condition","payload","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","combineReducers","state","action","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3f3ac8ef.chunk.js","sourcesContent":["import Input from \"./Input\";\nexport default Input;","import React, { useState } from 'react';\nimport './Input.css';\n\nexport default function Input({\n  addTask,\n  completeAll,\n  isNotEmpty,\n  isAllCompleted,\n}) {\n  const [task, setTask] = useState('');\n\n  const inputHandler = (e) => {\n    setTask(e.currentTarget.value);\n  };\n\n  const onBtnClickHandler = (e) => {\n    e.preventDefault();\n    if (task.trim()) addTask(task);\n    setTask('');\n  };\n\n  return (\n    <div id='input'>\n      <button\n        id='completeAllBtn'\n        onClick={completeAll}\n        className={\n          isAllCompleted && isNotEmpty\n            ? 'completed '\n            : isNotEmpty\n            ? ''\n            : 'empty'\n        }\n      >\n        &nbsp;\n      </button>\n      <form onSubmit={onBtnClickHandler}>\n        <input\n          type='text'\n          placeholder={`What needs to be done`}\n          value={task}\n          onChange={inputHandler}\n        />\n      </form>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport './TaskElement.css';\nexport default function TaskElement({\n  id,\n  isCompleted,\n  deleteTask,\n  changeCompleteness,\n  changeTask,\n  title,\n}) {\n  const [inputCondition, setInputCondition] = useState(true);\n  const [newValue, setNewValue] = useState(title);\n\n  const inputHandler = (e) => setNewValue(e.currentTarget.value);\n\n  const checkboxHandler = () => changeCompleteness(id, !isCompleted);\n\n  const submitHandler = (event) => {\n    console.log(event.type === 'blur' || event.key === 'Enter')\n    if (event.type === 'blur' || event.key === 'Enter') {\n      changeTask(newValue, id);\n      setInputCondition(true);\n    }\n  };\n\n  const deleteTaskF = () => deleteTask(id);\n\n  const changeCondition = () => setInputCondition(false);\n\n  return (\n    <>\n      <li className='taskElement'>\n        {inputCondition ? (\n          <>\n            <input\n              type='checkbox'\n              className='checkbox'\n              onChange={checkboxHandler}\n              checked={isCompleted}\n            />\n            <div id='inputArea' onDoubleClick={changeCondition}>\n              <p\n                className={\n                  isCompleted ? 'completed taskvalue' : 'uncompleted taskvalue'\n                }\n              >\n                {title}\n              </p>\n              <button className={'delete'} onClick={deleteTaskF}>\n                ×\n              </button>\n            </div>\n          </>\n        ) : (\n          <>\n            <input\n              className='valueChanger'\n              value={newValue}\n              onChange={inputHandler}\n              onKeyDown={submitHandler}\n              onBlur={submitHandler}\n              type='text'\n            />\n          </>\n        )}\n      </li>\n    </>\n  );\n}\n","import List from \"./List\";\nexport default List;","import React from 'react';\nimport TaskElement from '../TaskElement/TaskElement';\nimport './List.css';\n\nexport default function List(props) {\n  const renderHandler = () => {\n    let tasksTemplate = null;\n\n    if (props.tasks.length) {\n      tasksTemplate = props.tasks.map((item) => {\n        if (\n          props.showCondition === 'all' ||\n          (props.showCondition === 'uncompleted' && !item.isCompleted) ||\n          (props.showCondition === 'completed' && item.isCompleted)\n        ) {\n          return (\n            <TaskElement\n              title={item.title}\n              key={item.id}\n              id={item.id}\n              isCompleted={item.isCompleted}\n              changeCompleteness={props.changeCompleteness}\n              deleteTask={props.deleteTask}\n              changeTask={props.changeTask}\n            />\n          );\n        }\n        return null;\n      });\n    } else {\n      tasksTemplate = <p>No tasks</p>;\n    }\n    return tasksTemplate;\n  };\n\n  return (\n    <>\n      <hr></hr>\n      <ul>{renderHandler()}</ul>\n    </>\n  );\n}\n","import Footer from \"./Footer\";\nexport default Footer;","import React from 'react';\nimport './Footer.css';\n\nexport default function Footer({\n  clearCompleted,\n  showActive,\n  showAll,\n  showCompleted,\n  tasksCounter,\n  showCondition,\n  logout,\n}) {\n  const clearCompletedF = () => clearCompleted();\n  const showActiveF = () => showActive();\n  const showAllF = () => showAll();\n  const showCompletedF = () => showCompleted();\n\n  return (\n    <div id='footer'>\n      <p className='itemsLeft'>{tasksCounter.active} items left</p>\n      <ul className='menu'>\n        <li\n          className={`menuElement ${showCondition === 'all' ? 'active' : 'n'}`}\n          onClick={showAllF}\n        >\n          All\n        </li>\n        <li\n          className={`menuElement ${\n            showCondition === 'uncompleted' ? 'active' : 'n'\n          }`}\n          onClick={showActiveF}\n        >\n          Active\n        </li>\n        <li\n          className={`menuElement ${\n            showCondition === 'completed' ? 'active' : 'n'\n          }`}\n          onClick={showCompletedF}\n        >\n          Completed\n        </li>\n      </ul>\n      <button\n        className={`footerBtn ${!tasksCounter ? 'hidden' : ''}`}\n        onClick={clearCompletedF}\n      >\n        Clear completed\n      </button>\n    </div>\n  );\n}\n","import Login from \"./Login\";\nexport default Login;","import React, { useState } from 'react';\nimport './Login.css';\n\nexport default function Login(props) {\n  const [email, setEmail] = useState('');\n  const [emailErrors, setEmailErrors] = useState('');\n\n  const [password, setPassword] = useState('');\n  const [passwordErrors, setPasswordErrors] = useState('');\n\n  const loginHandler = async (e) => {\n    e.preventDefault();\n    try {\n      const res = await fetch('/login', {\n        method: 'POST',\n        body: JSON.stringify({ email, password }),\n        headers: { 'Content-Type': 'application/json' },\n      });\n      const data = await res.json();\n      if (data.errors) {\n        setEmailErrors(data.errors.email);\n        setPasswordErrors(data.errors.password);\n      } else {\n        localStorage.setItem('auth', JSON.stringify(data.token));\n        props.checkAuth();\n      }\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  return (\n    <div className='login'>\n      <form onSubmit={loginHandler}>\n        <div className='loginMenu'>\n          <h2>{'Login'}</h2>\n        </div>\n        <label>Email</label>\n        <input\n          type='text'\n          value={email}\n          onChange={(e) => setEmail(e.currentTarget.value)}\n        />\n        <div className='email error'>{emailErrors}</div>\n        <label>Password</label>\n        <input\n          type='password'\n          value={password}\n          onChange={(e) => setPassword(e.currentTarget.value)}\n        />\n        <div className='password error'>{passwordErrors}</div>\n        <button>Login</button>\n        <p onClick={props.setSignup} className='link'>\n          Don't have an account?\n        </p>\n      </form>\n    </div>\n  );\n}\n","import Signup from \"./Signup\";\nexport default Signup;","import React, { useState } from 'react';\nimport './Signup.css';\n\nexport default function Login(props) {\n  const [email, setEmail] = useState('');\n  const [emailErrors, setEmailErrors] = useState('');\n\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  const [passwordErrors, setPasswordErrors] = useState('');\n\n  const signupHandler = async (e) => {\n    e.preventDefault();\n    if (password === confirmPassword) {\n    try {\n      const res = await fetch('/signup', {\n        method: 'POST',\n        body: JSON.stringify({ email, password }),\n        headers: { 'Content-Type': 'application/json' },\n      });\n      const data = await res.json();\n      if (data.errors) {\n        setEmailErrors(data.errors.email);\n        setPasswordErrors(data.errors.password);\n      }\n      else  {\n        props.setLogin();\n      }\n    } catch (err) {\n      console.log(err);\n    }\n    }\n    else {\n      setPasswordErrors(`Passwords don't match`)\n    }\n  };\n\n  return (\n    <div className='signup'>\n      <form onSubmit={signupHandler}>\n        <div className='signupMenu'>\n          <h2>{'Signup'}</h2>\n        </div>\n        <label>Email</label>\n        <input\n          type='text'\n          value={email}\n          onChange={(e) => setEmail(e.currentTarget.value)}\n        />\n        <div className='email error'>{emailErrors}</div>\n        <label>Password</label>\n        <input\n          type='password'\n          value={password}\n          onChange={(e) => setPassword(e.currentTarget.value)}\n        />\n        <div className='password error'>{passwordErrors}</div>\n        <label>Confirm password</label>\n        <input\n          type='password'\n          value={confirmPassword}\n          onChange={(e) => setConfirmPassword(e.currentTarget.value)}\n        />\n        <button>Signup</button>\n        <p onClick={props.setLogin} className='link'>\n          Already have an account?\n        </p>\n      </form>\n    </div>\n  );\n}\n","import React from 'react';\nimport './App.css';\nimport Input from './components/Input';\nimport List from './components/List';\nimport Footer from './components/Footer';\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport { connect } from 'react-redux';\nconst jwt = require('jsonwebtoken');\n\nclass App extends React.Component {\n  componentDidMount = async () => {\n    await this.checkAuth();\n  };\n\n  showActive = () => this.props.showActive();\n  showAll = () => this.props.showAll();\n  showCompleted = () => this.props.showCompleted();\n\n  checkAuth = async () => {\n    if (localStorage['auth']) {\n      const token = JSON.parse(localStorage['auth']);\n\n      const res = await fetch('/verifyToken', {\n        method: 'POST',\n        body: JSON.stringify({ token }),\n        headers: { 'Content-Type': 'application/json' },\n      });\n      const data = await res.json();\n      console.log(data);\n      this.props.setLoginCondition(data.status);\n    } else {\n      this.props.setLoginCondition(false);\n    }\n    if (this.props.isLoggedIn) {\n      await this.fetchTasks();\n    }\n  };\n\n  fetchTasks = async () => {\n    fetch('/tasks/', {\n      method: 'GET',\n      headers: {\n        authorization: JSON.parse(localStorage['auth']),\n      },\n    })\n      .then((res) => res.json())\n      .then(async (tasks) => {\n        //await this.setState({ tasks });\n        await this.props.updateTasks(tasks);\n        this.stateTasksCounter();\n      });\n  };\n\n  setSignup = () => this.props.setLogOrSignUp('signup');\n\n  setLogin = () => this.props.setLogOrSignUp('login');\n\n  logout = async () => {\n    //await this.setState({ tasks: [] });\n    await this.props.clearTasks();\n    await localStorage.removeItem('auth');\n    await this.checkAuth();\n  };\n\n  addTask = async (title) => {\n    await fetch('/tasks/', {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        authorization: JSON.parse(localStorage['auth']),\n      },\n      method: 'POST',\n      body: JSON.stringify({\n        title,\n      }),\n    }).catch(function (err) {\n      console.log(err);\n    });\n    await this.fetchTasks();\n  };\n\n  findIndexById = (id) => {\n    for (let i = 0; i < this.props.tasks.length; i++) {\n      if (id === this.props.tasks[i].id) return i;\n    }\n  };\n\n  stateTasksCounter = () => {\n    this.props.updateCounter({\n      all: this.props.tasks.length,\n      completed: this.props.tasks.reduce(\n        (sum, current) => sum + current.isCompleted,\n        0\n      ),\n      active: this.props.tasks.reduce(\n        (sum, current) => sum + !current.isCompleted,\n        0\n      ),\n    });\n  };\n\n  changeCompleteness = async (id, isCompleted) => {\n    await fetch('/tasks/', {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        authorization: JSON.parse(localStorage['auth']),\n      },\n      method: 'PATCH',\n      body: JSON.stringify([{ id: id, setComplete: isCompleted }]),\n    });\n    await this.fetchTasks();\n    this.stateTasksCounter();\n  };\n\n  deleteTask = async (id) => {\n    await fetch('/tasks/', {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        authorization: JSON.parse(localStorage['auth']),\n      },\n      method: 'DELETE',\n      body: JSON.stringify([id]),\n    });\n    await this.fetchTasks();\n  };\n\n  changeTask = async (value, id) => {\n    await fetch('/tasks/', {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        authorization: JSON.parse(localStorage['auth']),\n      },\n      method: 'PATCH',\n      body: JSON.stringify([{ id: id, title: value }]),\n    });\n    await this.fetchTasks();\n  };\n\n  completeAll = async () => {\n    let tempItems = [...this.props.tasks];\n    tempItems[0].setComplete = false;\n    tempItems.forEach((item) => {\n      if (!item.isCompleted) tempItems[0].setComplete = true;\n    });\n\n    await fetch('/tasks/', {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        authorization: JSON.parse(localStorage['auth']),\n      },\n      method: 'PATCH',\n      body: JSON.stringify(\n        tempItems.map((item) => {\n          if (item.hasOwnProperty('setComplete'))\n            return { id: item.id, setComplete: item.setComplete };\n          return { id: item.id };\n        })\n      ),\n    });\n    await this.fetchTasks();\n    this.stateTasksCounter();\n  };\n\n  clearCompleted = async () => {\n    let tempItems = this.props.tasks.filter((e) => !e.isCompleted);\n\n    fetch('/tasks/', {\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json',\n        authorization: JSON.parse(localStorage['auth']),\n      },\n      method: 'DELETE',\n      body: JSON.stringify(\n        this.props.tasks\n          .filter((x) => tempItems.indexOf(x) === -1)\n          .map((item) => item.id)\n      ),\n    });\n    await this.fetchTasks();\n    this.stateTasksCounter();\n  };\n\n  render() {\n    if (localStorage['auth'] && !this.props.isLoggedIn) {\n      return <></>;\n    }\n    return (\n      <div className='App'>\n        <h1>todos</h1>\n        {this.props.isLoggedIn && (\n          <>\n            <p className='username'>\n              Logged as {jwt.decode(JSON.parse(localStorage['auth'])).email}{' '}\n              <span onClick={this.logout} className='logout'>\n                {' '}\n                Logout{' '}\n              </span>\n            </p>\n            <Input\n              addTask={this.addTask}\n              completeAll={this.completeAll}\n              isAllCompleted={\n                this.props.tasksCounter.all ===\n                this.props.tasksCounter.completed\n              }\n              isNotEmpty={this.props.tasksCounter.all}\n            />\n\n            {!!this.props.tasks.length && (\n              <>\n                <List\n                  tasks={this.props.tasks}\n                  changeCompleteness={this.changeCompleteness}\n                  showCondition={this.props.visibility}\n                  deleteTask={this.deleteTask}\n                  taskElemHandler={this.taskElemHandler}\n                  changeTask={this.changeTask}\n                />\n                <Footer\n                  clearCompleted={this.clearCompleted}\n                  showActive={this.showActive}\n                  showAll={this.showAll}\n                  showCompleted={this.showCompleted}\n                  showCondition={this.props.visibility}\n                  tasksCounter={this.props.tasksCounter}\n                  logout={this.logout}\n                />\n              </>\n            )}\n          </>\n        )}\n        {!this.props.isLoggedIn && this.props.logOrSignUp === 'login' && (\n          <Login checkAuth={this.checkAuth} setSignup={this.setSignup} />\n        )}\n        {!this.props.isLoggedIn && this.props.logOrSignUp === 'signup' && (\n          <Signup checkAuth={this.checkAuth} setLogin={this.setLogin} />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (store) => {\n  return {\n    visibility: store.visibility,\n    isLoggedIn: store.isLoggedIn,\n    tasksCounter: store.tasksCounter,\n    tasks: store.tasks,\n    logOrSignUp: store.logOrSignUp,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    showActive: () => dispatch({ type: 'SHOW_ACTIVE' }),\n    showAll: () => dispatch({ type: 'SHOW_ALL' }),\n    showCompleted: () => dispatch({ type: 'SHOW_COMPLETED' }),\n    setLoginCondition: (condition) =>\n      dispatch({ type: 'SET_LOGIN_CONDITION', payload: condition }),\n    updateCounter: (tasksCounter) =>\n      dispatch({ type: 'UPDATE_COUNTER', payload: tasksCounter }),\n    updateTasks: (tasks) => dispatch({ type: 'UPDATE_TASKS', payload: tasks }),\n    clearTasks: () => dispatch({ type: 'CLEAR_TASKS' }),\n    setLogOrSignUp: (condition) =>\n      dispatch({ type: 'SET_LOGORSIGNUP_CONDITION', payload: condition }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const initialState = {\n  all: 0,\n  completed: 0,\n  active: 0,\n};\n\nexport function tasksCounterReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'UPDATE_COUNTER':\n      console.log('updfate tasks asdsadad');\n      return {\n        all: action.payload.all,\n        completed: action.payload.completed,\n        active: action.payload.active,\n      };\n    default:\n      return state;\n  }\n}\n","export const initialState = [];\n\nexport function tasksReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'UPDATE_TASKS':\n      return action.payload;\n    case 'CLEAR_TASKS':\n      return [];\n    default:\n      return state;\n  }\n}\n","export const initialState = 'login';\n\nexport function logOrSignUpReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'SET_LOGORSIGNUP_CONDITION':\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport { visibilityReducer } from './visibility';\nimport { isLoggedInReducer } from './isLoggedIn';\nimport { tasksCounterReducer } from './tasksCounter';\nimport { tasksReducer } from './tasks';\nimport { logOrSignUpReducer } from './logOrSignUp';\n\nexport const rootReducer = combineReducers({\n  visibility: visibilityReducer,\n  isLoggedIn: isLoggedInReducer,\n  tasksCounter: tasksCounterReducer,\n  tasks: tasksReducer,\n  logOrSignUp: logOrSignUpReducer,\n});\n","export const initialState = 'all';\n\nexport function visibilityReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'SHOW_ACTIVE':\n      return 'uncompleted';\n    case 'SHOW_ALL':\n      return 'all';\n    case 'SHOW_COMPLETED':\n      return 'completed';\n    default:\n      return state;\n  }\n}\n","export const initialState = false;\n\nexport function isLoggedInReducer(state = initialState, action) {\n  switch (action.type) {\n    case 'SET_LOGIN_CONDITION':\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { createStore } from 'redux';\nimport { rootReducer } from '../reducers';\n\nexport const store = createStore(rootReducer);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './store/configureStore';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}